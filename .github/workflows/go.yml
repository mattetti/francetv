name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v -o francetv

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: francetv-linux
        path: francetv

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v -o francetv

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: francetv-macos
        path: francetv

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v -o francetv.exe

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: francetv-windows
        path: francetv.exe

  create-tag:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    steps:
    - uses: actions/checkout@v4

    - name: Create or Update Nightly Tag
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git tag -f nightly
        git push -f origin nightly

  release:
    needs: [create-tag]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: francetv-linux
        path: ./release

    - uses: actions/download-artifact@v4
      with:
        name: francetv-macos
        path: ./release

    - uses: actions/download-artifact@v4
      with:
        name: francetv-windows
        path: ./release

    - name: Create or Update Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly
        name: Nightly Build
        draft: false
        prerelease: true
        body: "Nightly build of the francetv project."

    - name: Upload Release Asset Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/francetv
        asset_name: francetv-linux
        asset_content_type: application/octet-stream

    - name: Upload Release Asset macOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/francetv
        asset_name: francetv-macos
        asset_content_type: application/octet-stream

    - name: Upload Release Asset Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/francetv.exe
        asset_name: francetv-windows.exe
        asset_content_type: application/octet-stream
